-- CFrame Fly Script with X key toggle
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")

local LocalPlayer = Players.LocalPlayer
local Camera = workspace.CurrentCamera

local flyEnabled = false
local flySpeed = 2 -- studs per frame (adjust for faster/slower)

local keys = { W = false, A = false, S = false, D = false, Space = false, LeftShift = false }

-- Toggle fly on keypress (X key)
UserInputService.InputBegan:Connect(function(input, gpe)
	if gpe then return end
	if input.KeyCode == Enum.KeyCode.X then
		flyEnabled = not flyEnabled
		if not flyEnabled then
			-- reset velocity so you don't keep floating
			local char = LocalPlayer.Character
			if char and char:FindFirstChild("HumanoidRootPart") then
				char.HumanoidRootPart.AssemblyLinearVelocity = Vector3.zero
			end
		end
	end

	local key = input.KeyCode.Name
	if keys[key] ~= nil then
		keys[key] = true
	end
end)

UserInputService.InputEnded:Connect(function(input, gpe)
	if gpe then return end
	local key = input.KeyCode.Name
	if keys[key] ~= nil then
		keys[key] = false
	end
end)

-- Fly loop
RunService.RenderStepped:Connect(function()
	if flyEnabled then
		local char = LocalPlayer.Character
		if char and char:FindFirstChild("HumanoidRootPart") then
			local hrp = char.HumanoidRootPart

			-- direction based on camera
			local moveDir = Vector3.zero
			local camCF = Camera.CFrame

			if keys.W then moveDir += camCF.LookVector end
			if keys.S then moveDir -= camCF.LookVector end
			if keys.A then moveDir -= camCF.RightVector end
			if keys.D then moveDir += camCF.RightVector end
			if keys.Space then moveDir += camCF.UpVector end
			if keys.LeftShift then moveDir -= camCF.UpVector end

			if moveDir.Magnitude > 0 then
				moveDir = moveDir.Unit * flySpeed
				hrp.CFrame = hrp.CFrame + moveDir
			end

			-- cancel normal physics fall
			hrp.AssemblyLinearVelocity = Vector3.zero
		end
	end
end)
